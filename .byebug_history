continue
@hours
exit
continue
hr.created_at.day
hr.created_at
hr
exit
next
continue
h
@hours
continue
@hours[5].first.created_at
@hours[5].first
@hours[5]
h
h.created_at
@hours[5]
@hours
continue
notice
<% notice %>
continue
student_history.count
@hour
continue
@months_days
common_days[@month.to_i]
@month
@month_days
@day.to_i > @months_days
continue
@day
continue
@day.to_i
@day.to_i > @months_days
@day
@year
@yeaer
@month
@day
continue
@day
continue
@day.to_i > @months_days
continue
@day.to_i
@day.to_i > @months_days
continue
next
@hour
next
continue
student_history.empty?
student_history
next
continue
history
next
@student.hours.where("date_part('month', created_at AT TIME ZONE 'Canada/Eastern') = ? AND date_part('year', created_at AT TIME ZONE 'Canada/Eastern') = ? AND date_part('day', created_at AT TIME ZONE 'Canada/Eastern') <= ?", month, year, day)
params
continue
DateTime.strptime(date, "%m/%d/%Y %H:%M:%S")
date
continue
@create_date
continue
@create_date
continue
@month
@year
@day
continue
!params[:day]
@year < Time.now.year
@month < Time.now.month
Time.now.month
@month
quit
params
